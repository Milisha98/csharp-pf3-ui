@page "/"
@inject IJSRuntime JsRuntime;
@using PF3_UI.Mortgage;


<h1>Amortisation</h1>

<div class="row">
    <label for="txtBalance" class="col-sm-2">Balance</label>
    <input id="txtBalance" type="text" class="col-sm-2" @bind:event="oninput" @bind="@vm.Balance" />
</div>

<div class="row">
    <label for="txtInterest" class="col-sm-2">Interest</label>
    <input id="txtInterest" type="text" class="col-sm-1" @bind:event="oninput" @bind="@vm.Interest" />
</div>

<div class="row">
    <label for="cboYear" class="col-sm-2">Years</label>
    <select name="cboYear" id="cboYear" @bind="@vm.Term" class="col-sm-2">
        <option value=30>30 Years</option>
        <option value=25>25 Years</option>
        <option value=20>20 Years</option>
        <option value=15>15 Years</option>
        <option value=10>10 Years</option>
        <option value=5>5 Years</option>
    </select>
</div>

<div class="row">
    <label class="col-sm-2" for="cboPeriod">Payment Period</label>
    <select name="cboPeriod" id="cboPeriod" @bind="@vm.PaymentPeriod" class="col-sm-2">
        <option value=12>Per Month</option>
        <option value=26>Per Fortnight</option>
        <option value=52>Per Week</option>
    </select>    
</div>

@if (vm.Model.Balance > 0m)
{
<div class="row">
    <label for="txtBalance" class="col-sm-2">Actual Repayment</label>
    <input id="txtBalance" type="text" class="col-sm-1" style="height: 32px" @bind:event="oninput" @bind="@vm.ActualRepayment" @onchange="@DisplayChart" />
    <div class="col-sm-1"></div>
    @if (vm.RequiredRepayment.HasValue)
    {
        <div class="alert alert-@(vm.RepaymentWarningClass)" role="alert">
            <span>Required Repayment: @(vm.RequiredRepayment.Value.ToString("c"))</span>
        </div>
    }
    
</div>
}

<!-- Display the Results -->
@if (vm.BalanceResults?.Any() == true)
{
<hr />

<!-- Toggle Buttons -->
<div class="btn-group btn-group-toggle" data-toggle="buttons">
    <label class='btn btn-secondary @(vm.ShowBalancePanel ? "active" : "")' @onclick="@(_ => { vm.ShowBalancePanel = true; DisplayChart(); })">
        <input type="radio" name="options" id="optBalance" autocomplete="off" checked=@vm.ShowBalancePanel > Balance
    </label>
    <label class='btn btn-secondary @(vm.ShowBalancePanel ? "" : "active")' @onclick="@(_ => vm.ShowBalancePanel = false)">
        <input type="radio" name="options" id="optBalance" autocomplete="off" checked=@(!vm.ShowBalancePanel)> Principle &amp; Interest
    </label>
</div>

<!-- Results Pane -->
<div class="container">
    <div class="row">
        <div class="col-sm"><p class="lead">The end date is @(vm.EndDate) (i.e. in @(vm.EndDateInPlainEnglish))</p></div>        
    </div>
    <div class="row">
        <div class="col-sm"><p class="lead">Total Interest Paid: @(vm.OriginalTotalInterest)</p></div>
        @if (vm.ShowNewInterest)
        {
            <div class="col-sm"><p class="lead">After contributions you save @(vm.TotalInterestDiff) in interest</p></div>
        }
    </div>


<!-- Balance -->
@if (vm.ShowBalancePanel)
{
    <div class="container">
        <div class="row">
            <div class="col-sm">
                <div class="row">
                    <div class="col-sm-1"><strong>Year</strong></div>
                    <div class="col-sm-1"><strong>Balance</strong></div>
                </div>    
                @foreach (var row in vm.BalanceResults)
                {
                    <div class="row">
                        <div class="col-sm-1"><small>@(row.When.ToString("yyyy"))</small></div>
                        <div class="col-sm-1"><small class="text-right">@(row.Balance.ToString("c"))</small></div>
                    </div>
                }
            </div>
            <div class="col-sm">
                <canvas id="balanceChart" width="600px" height="400px"></canvas>
            </div>
        </div>        
    </div>
    
}
else
{

<!-- Princicple & Interest -->
    <div class="row">
        <div class="col-sm-1"><strong>Month</strong></div>
        <div class="col-sm-1"><strong>Principle</strong></div>
        <div class="col-sm-1"><strong>Interest</strong></div>
        <div class="col-sm-1"><strong>Contribution</strong></div>
    </div>

    @foreach (var row in vm.PrincipleInterestResults)
    {
        <div class="row">
            <div class="col-sm-1"><small>@(row.When.ToString("MMM yyyy"))</small></div>
            <div class="col-sm-1 @(row.BackgroundColor)"><small>@(row.Total.ToString("c"))</small></div>
            <div class="col-sm-1"><small>@(row.Interest.ToString("c"))</small></div>
            <input type='text' @bind:event="oninput" @bind="@row.ExtraPayment" @onchange="@(() => vm.UpdatePrincipleInterestResult(row))" class='col-sm-1' />
        </div>
    }

}
</div>

}

@code {
    private ViewModel vm = new ViewModel();

    public async void DisplayChart()
    {
        if (vm.ShowChart)
        {
            await JsRuntime.InvokeVoidAsync("chartBalance", new object[] { vm.XAxis, vm.Data });
        }
    }
}
